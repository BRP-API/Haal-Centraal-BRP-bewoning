/*
 * Bewoning
 *
 * API voor het zoeken en raadplegen van bewoningen en metagegevens over bewoning (verloop). Een bewoning is een adresseerbaar object (verblijfsobject, ligplaats of standplaats) met ingeschreven bewoner(s). Iedere samenstelling van bewoners van het object is een bewoning. Overleden personen maken onderdeel uit van een bewoning tot het moment van overlijden. Gegevens over de bewoners zijn actueel. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Redenen voor opschorting van de bijhouding * &#x60;overlijden&#x60; - O * &#x60;emigratie&#x60; - E * &#x60;ministerieel_besluit&#x60; - M * &#x60;pl_aangelegd_in_de_rni&#x60; - R - opgeschort omdat persoon is ingeschreven in het Register Niet Ingezeten (RNI). * &#x60;fout&#x60; - F 
    /// </summary>
    /// <value>Redenen voor opschorting van de bijhouding * &#x60;overlijden&#x60; - O * &#x60;emigratie&#x60; - E * &#x60;ministerieel_besluit&#x60; - M * &#x60;pl_aangelegd_in_de_rni&#x60; - R - opgeschort omdat persoon is ingeschreven in het Register Niet Ingezeten (RNI). * &#x60;fout&#x60; - F </value>
    
    [JsonConverter(typeof(StringEnumConverter))]
    
    public enum RedenOpschortingBijhoudingEnum
    {
        /// <summary>
        /// Enum Overlijden for value: overlijden
        /// </summary>
        [EnumMember(Value = "overlijden")]
        Overlijden = 1,

        /// <summary>
        /// Enum Emigratie for value: emigratie
        /// </summary>
        [EnumMember(Value = "emigratie")]
        Emigratie = 2,

        /// <summary>
        /// Enum MinisterieelBesluit for value: ministerieel_besluit
        /// </summary>
        [EnumMember(Value = "ministerieel_besluit")]
        MinisterieelBesluit = 3,

        /// <summary>
        /// Enum PlAangelegdInDeRni for value: pl_aangelegd_in_de_rni
        /// </summary>
        [EnumMember(Value = "pl_aangelegd_in_de_rni")]
        PlAangelegdInDeRni = 4,

        /// <summary>
        /// Enum Fout for value: fout
        /// </summary>
        [EnumMember(Value = "fout")]
        Fout = 5

    }

}
