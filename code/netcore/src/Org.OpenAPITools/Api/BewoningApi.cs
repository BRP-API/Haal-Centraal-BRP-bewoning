/*
 * Bewoning
 *
 * API voor het zoeken en raadplegen van bewoningen en metagegevens over bewoning (verloop). Een bewoning is een adresseerbaar object (verblijfsobject, ligplaats of standplaats) met ingeschreven bewoner(s). Iedere samenstelling van bewoners van het object is een bewoning. Overleden personen maken onderdeel uit van een bewoning tot het moment van overlijden. Gegevens over de bewoners zijn actueel. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Org.OpenAPITools.Client;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IBewoningApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Raadpleeg een bewoning door een adresseerbaarobjectIdentificatie op te geven. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats. </param>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>BewoningHal</returns>
        BewoningHal GetBewoning(string adresseerbaarObjectIdentificatie, string expand = default(string), string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Raadpleeg een bewoning door een adresseerbaarobjectIdentificatie op te geven. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats. </param>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>ApiResponse of BewoningHal</returns>
        ApiResponse<BewoningHal> GetBewoningWithHttpInfo(string adresseerbaarObjectIdentificatie, string expand = default(string), string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Zoek bewoningen door een adresseerbaarObjectIdentificatie of een burgerservicenummer op te geven, samen met een peildatum of periode. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="burgerservicenummer">Uniek persoonsnummer.  (optional)</param>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats.  (optional)</param>
        /// <returns>BewoningHalCollectie</returns>
        BewoningHalCollectie GetBewoningen(string expand = default(string), string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), string burgerservicenummer = default(string), string adresseerbaarObjectIdentificatie = default(string));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Zoek bewoningen door een adresseerbaarObjectIdentificatie of een burgerservicenummer op te geven, samen met een peildatum of periode. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="burgerservicenummer">Uniek persoonsnummer.  (optional)</param>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats.  (optional)</param>
        /// <returns>ApiResponse of BewoningHalCollectie</returns>
        ApiResponse<BewoningHalCollectie> GetBewoningenWithHttpInfo(string expand = default(string), string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), string burgerservicenummer = default(string), string adresseerbaarObjectIdentificatie = default(string));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Raadpleeg het verloop van de bewoning van een adresseerbaar object over een periode door een adresseerbaarobjectIdentificatie en een periode op te geven. Het antwoord bevat het aantal verhuizingen van en naar het object en het gemiddelde aantal bewoners in de opgegeven periode. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats. </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>Verloop</returns>
        Verloop GetBewoningverloop(string adresseerbaarObjectIdentificatie, string fields = default(string), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Raadpleeg het verloop van de bewoning van een adresseerbaar object over een periode door een adresseerbaarobjectIdentificatie en een periode op te geven. Het antwoord bevat het aantal verhuizingen van en naar het object en het gemiddelde aantal bewoners in de opgegeven periode. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats. </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>ApiResponse of Verloop</returns>
        ApiResponse<Verloop> GetBewoningverloopWithHttpInfo(string adresseerbaarObjectIdentificatie, string fields = default(string), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IBewoningApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Raadpleeg een bewoning door een adresseerbaarobjectIdentificatie op te geven. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats. </param>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of BewoningHal</returns>
        System.Threading.Tasks.Task<BewoningHal> GetBewoningAsync(string adresseerbaarObjectIdentificatie, string expand = default(string), string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Raadpleeg een bewoning door een adresseerbaarobjectIdentificatie op te geven. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats. </param>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (BewoningHal)</returns>
        System.Threading.Tasks.Task<ApiResponse<BewoningHal>> GetBewoningWithHttpInfoAsync(string adresseerbaarObjectIdentificatie, string expand = default(string), string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Zoek bewoningen door een adresseerbaarObjectIdentificatie of een burgerservicenummer op te geven, samen met een peildatum of periode. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="burgerservicenummer">Uniek persoonsnummer.  (optional)</param>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats.  (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of BewoningHalCollectie</returns>
        System.Threading.Tasks.Task<BewoningHalCollectie> GetBewoningenAsync(string expand = default(string), string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), string burgerservicenummer = default(string), string adresseerbaarObjectIdentificatie = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Zoek bewoningen door een adresseerbaarObjectIdentificatie of een burgerservicenummer op te geven, samen met een peildatum of periode. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="burgerservicenummer">Uniek persoonsnummer.  (optional)</param>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats.  (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (BewoningHalCollectie)</returns>
        System.Threading.Tasks.Task<ApiResponse<BewoningHalCollectie>> GetBewoningenWithHttpInfoAsync(string expand = default(string), string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), string burgerservicenummer = default(string), string adresseerbaarObjectIdentificatie = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Raadpleeg het verloop van de bewoning van een adresseerbaar object over een periode door een adresseerbaarobjectIdentificatie en een periode op te geven. Het antwoord bevat het aantal verhuizingen van en naar het object en het gemiddelde aantal bewoners in de opgegeven periode. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats. </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Verloop</returns>
        System.Threading.Tasks.Task<Verloop> GetBewoningverloopAsync(string adresseerbaarObjectIdentificatie, string fields = default(string), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Raadpleeg het verloop van de bewoning van een adresseerbaar object over een periode door een adresseerbaarobjectIdentificatie en een periode op te geven. Het antwoord bevat het aantal verhuizingen van en naar het object en het gemiddelde aantal bewoners in de opgegeven periode. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats. </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Verloop)</returns>
        System.Threading.Tasks.Task<ApiResponse<Verloop>> GetBewoningverloopWithHttpInfoAsync(string adresseerbaarObjectIdentificatie, string fields = default(string), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IBewoningApi : IBewoningApiSync, IBewoningApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class BewoningApi : IBewoningApi
    {
        private Org.OpenAPITools.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="BewoningApi"/> class.
        /// </summary>
        /// <returns></returns>
        public BewoningApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="BewoningApi"/> class.
        /// </summary>
        /// <returns></returns>
        public BewoningApi(String basePath)
        {
            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                new Org.OpenAPITools.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="BewoningApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public BewoningApi(Org.OpenAPITools.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="BewoningApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public BewoningApi(Org.OpenAPITools.Client.ISynchronousClient client, Org.OpenAPITools.Client.IAsynchronousClient asyncClient, Org.OpenAPITools.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Org.OpenAPITools.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Org.OpenAPITools.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Org.OpenAPITools.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Org.OpenAPITools.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        ///  Raadpleeg een bewoning door een adresseerbaarobjectIdentificatie op te geven. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats. </param>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>BewoningHal</returns>
        public BewoningHal GetBewoning(string adresseerbaarObjectIdentificatie, string expand = default(string), string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?))
        {
            Org.OpenAPITools.Client.ApiResponse<BewoningHal> localVarResponse = GetBewoningWithHttpInfo(adresseerbaarObjectIdentificatie, expand, fields, peildatum, datumVan, datumTotEnMet);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Raadpleeg een bewoning door een adresseerbaarobjectIdentificatie op te geven. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats. </param>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>ApiResponse of BewoningHal</returns>
        public Org.OpenAPITools.Client.ApiResponse<BewoningHal> GetBewoningWithHttpInfo(string adresseerbaarObjectIdentificatie, string expand = default(string), string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?))
        {
            // verify the required parameter 'adresseerbaarObjectIdentificatie' is set
            if (adresseerbaarObjectIdentificatie == null)
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'adresseerbaarObjectIdentificatie' when calling BewoningApi->GetBewoning");

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("adresseerbaarObjectIdentificatie", Org.OpenAPITools.Client.ClientUtils.ParameterToString(adresseerbaarObjectIdentificatie)); // path parameter
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "expand", expand));
            }
            if (fields != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "fields", fields));
            }
            if (peildatum != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "peildatum", peildatum));
            }
            if (datumVan != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "datumVan", datumVan));
            }
            if (datumTotEnMet != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "datumTotEnMet", datumTotEnMet));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<BewoningHal>("/bewoningen/{adresseerbaarObjectIdentificatie}", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetBewoning", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Raadpleeg een bewoning door een adresseerbaarobjectIdentificatie op te geven. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats. </param>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of BewoningHal</returns>
        public async System.Threading.Tasks.Task<BewoningHal> GetBewoningAsync(string adresseerbaarObjectIdentificatie, string expand = default(string), string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<BewoningHal> localVarResponse = await GetBewoningWithHttpInfoAsync(adresseerbaarObjectIdentificatie, expand, fields, peildatum, datumVan, datumTotEnMet, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Raadpleeg een bewoning door een adresseerbaarobjectIdentificatie op te geven. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats. </param>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (BewoningHal)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<BewoningHal>> GetBewoningWithHttpInfoAsync(string adresseerbaarObjectIdentificatie, string expand = default(string), string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'adresseerbaarObjectIdentificatie' is set
            if (adresseerbaarObjectIdentificatie == null)
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'adresseerbaarObjectIdentificatie' when calling BewoningApi->GetBewoning");


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };


            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("adresseerbaarObjectIdentificatie", Org.OpenAPITools.Client.ClientUtils.ParameterToString(adresseerbaarObjectIdentificatie)); // path parameter
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "expand", expand));
            }
            if (fields != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "fields", fields));
            }
            if (peildatum != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "peildatum", peildatum));
            }
            if (datumVan != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "datumVan", datumVan));
            }
            if (datumTotEnMet != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "datumTotEnMet", datumTotEnMet));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<BewoningHal>("/bewoningen/{adresseerbaarObjectIdentificatie}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetBewoning", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Zoek bewoningen door een adresseerbaarObjectIdentificatie of een burgerservicenummer op te geven, samen met een peildatum of periode. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="burgerservicenummer">Uniek persoonsnummer.  (optional)</param>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats.  (optional)</param>
        /// <returns>BewoningHalCollectie</returns>
        public BewoningHalCollectie GetBewoningen(string expand = default(string), string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), string burgerservicenummer = default(string), string adresseerbaarObjectIdentificatie = default(string))
        {
            Org.OpenAPITools.Client.ApiResponse<BewoningHalCollectie> localVarResponse = GetBewoningenWithHttpInfo(expand, fields, peildatum, datumVan, datumTotEnMet, burgerservicenummer, adresseerbaarObjectIdentificatie);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Zoek bewoningen door een adresseerbaarObjectIdentificatie of een burgerservicenummer op te geven, samen met een peildatum of periode. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="burgerservicenummer">Uniek persoonsnummer.  (optional)</param>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats.  (optional)</param>
        /// <returns>ApiResponse of BewoningHalCollectie</returns>
        public Org.OpenAPITools.Client.ApiResponse<BewoningHalCollectie> GetBewoningenWithHttpInfo(string expand = default(string), string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), string burgerservicenummer = default(string), string adresseerbaarObjectIdentificatie = default(string))
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "expand", expand));
            }
            if (fields != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "fields", fields));
            }
            if (peildatum != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "peildatum", peildatum));
            }
            if (datumVan != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "datumVan", datumVan));
            }
            if (datumTotEnMet != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "datumTotEnMet", datumTotEnMet));
            }
            if (burgerservicenummer != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "burgerservicenummer", burgerservicenummer));
            }
            if (adresseerbaarObjectIdentificatie != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "adresseerbaarObjectIdentificatie", adresseerbaarObjectIdentificatie));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<BewoningHalCollectie>("/bewoningen", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetBewoningen", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Zoek bewoningen door een adresseerbaarObjectIdentificatie of een burgerservicenummer op te geven, samen met een peildatum of periode. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="burgerservicenummer">Uniek persoonsnummer.  (optional)</param>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats.  (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of BewoningHalCollectie</returns>
        public async System.Threading.Tasks.Task<BewoningHalCollectie> GetBewoningenAsync(string expand = default(string), string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), string burgerservicenummer = default(string), string adresseerbaarObjectIdentificatie = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<BewoningHalCollectie> localVarResponse = await GetBewoningenWithHttpInfoAsync(expand, fields, peildatum, datumVan, datumTotEnMet, burgerservicenummer, adresseerbaarObjectIdentificatie, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Zoek bewoningen door een adresseerbaarObjectIdentificatie of een burgerservicenummer op te geven, samen met een peildatum of periode. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="burgerservicenummer">Uniek persoonsnummer.  (optional)</param>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats.  (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (BewoningHalCollectie)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<BewoningHalCollectie>> GetBewoningenWithHttpInfoAsync(string expand = default(string), string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), string burgerservicenummer = default(string), string adresseerbaarObjectIdentificatie = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };


            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "expand", expand));
            }
            if (fields != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "fields", fields));
            }
            if (peildatum != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "peildatum", peildatum));
            }
            if (datumVan != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "datumVan", datumVan));
            }
            if (datumTotEnMet != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "datumTotEnMet", datumTotEnMet));
            }
            if (burgerservicenummer != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "burgerservicenummer", burgerservicenummer));
            }
            if (adresseerbaarObjectIdentificatie != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "adresseerbaarObjectIdentificatie", adresseerbaarObjectIdentificatie));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<BewoningHalCollectie>("/bewoningen", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetBewoningen", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Raadpleeg het verloop van de bewoning van een adresseerbaar object over een periode door een adresseerbaarobjectIdentificatie en een periode op te geven. Het antwoord bevat het aantal verhuizingen van en naar het object en het gemiddelde aantal bewoners in de opgegeven periode. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats. </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>Verloop</returns>
        public Verloop GetBewoningverloop(string adresseerbaarObjectIdentificatie, string fields = default(string), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?))
        {
            Org.OpenAPITools.Client.ApiResponse<Verloop> localVarResponse = GetBewoningverloopWithHttpInfo(adresseerbaarObjectIdentificatie, fields, datumVan, datumTotEnMet);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Raadpleeg het verloop van de bewoning van een adresseerbaar object over een periode door een adresseerbaarobjectIdentificatie en een periode op te geven. Het antwoord bevat het aantal verhuizingen van en naar het object en het gemiddelde aantal bewoners in de opgegeven periode. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats. </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>ApiResponse of Verloop</returns>
        public Org.OpenAPITools.Client.ApiResponse<Verloop> GetBewoningverloopWithHttpInfo(string adresseerbaarObjectIdentificatie, string fields = default(string), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?))
        {
            // verify the required parameter 'adresseerbaarObjectIdentificatie' is set
            if (adresseerbaarObjectIdentificatie == null)
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'adresseerbaarObjectIdentificatie' when calling BewoningApi->GetBewoningverloop");

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("adresseerbaarObjectIdentificatie", Org.OpenAPITools.Client.ClientUtils.ParameterToString(adresseerbaarObjectIdentificatie)); // path parameter
            if (fields != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "fields", fields));
            }
            if (datumVan != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "datumVan", datumVan));
            }
            if (datumTotEnMet != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "datumTotEnMet", datumTotEnMet));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Verloop>("/bewoningen/{adresseerbaarObjectIdentificatie}/verloop", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetBewoningverloop", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Raadpleeg het verloop van de bewoning van een adresseerbaar object over een periode door een adresseerbaarobjectIdentificatie en een periode op te geven. Het antwoord bevat het aantal verhuizingen van en naar het object en het gemiddelde aantal bewoners in de opgegeven periode. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats. </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Verloop</returns>
        public async System.Threading.Tasks.Task<Verloop> GetBewoningverloopAsync(string adresseerbaarObjectIdentificatie, string fields = default(string), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<Verloop> localVarResponse = await GetBewoningverloopWithHttpInfoAsync(adresseerbaarObjectIdentificatie, fields, datumVan, datumTotEnMet, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Raadpleeg het verloop van de bewoning van een adresseerbaar object over een periode door een adresseerbaarobjectIdentificatie en een periode op te geven. Het antwoord bevat het aantal verhuizingen van en naar het object en het gemiddelde aantal bewoners in de opgegeven periode. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats. </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Verloop)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<Verloop>> GetBewoningverloopWithHttpInfoAsync(string adresseerbaarObjectIdentificatie, string fields = default(string), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'adresseerbaarObjectIdentificatie' is set
            if (adresseerbaarObjectIdentificatie == null)
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'adresseerbaarObjectIdentificatie' when calling BewoningApi->GetBewoningverloop");


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };


            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("adresseerbaarObjectIdentificatie", Org.OpenAPITools.Client.ClientUtils.ParameterToString(adresseerbaarObjectIdentificatie)); // path parameter
            if (fields != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "fields", fields));
            }
            if (datumVan != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "datumVan", datumVan));
            }
            if (datumTotEnMet != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "datumTotEnMet", datumTotEnMet));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Verloop>("/bewoningen/{adresseerbaarObjectIdentificatie}/verloop", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetBewoningverloop", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
