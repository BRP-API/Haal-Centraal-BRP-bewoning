openapi: 3.0.0
info:
  contact:
    url: https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bewoning
  description: |
    API voor het zoeken en raadplegen van bewoningen en metagegevens over bewoning (verloop).
    Een bewoning is een adresseerbaar object (verblijfsobject, ligplaats of standplaats) met ingeschreven bewoner(s).
    Iedere samenstelling van bewoners van het object is een bewoning. Overleden personen maken onderdeel uit van een
    bewoning tot het moment van overlijden. Gegevens over de bewoners zijn actueel.
  license:
    name: European Union Public License, version 1.2 (EUPL-1.2)
    url: https://eupl.eu/1.2/nl/
  title: Bewoning
  version: 1.0.0
servers:
- description: |
    APILAB testserver bewoning
  url: https://www.haalcentraal.nl/haalcentraal/api/brpbewoning
tags:
- name: Bewoning
paths:
  /bewoningen:
    get:
      description: |
        Zoek bewoningen door een adresseerbaarObjectIdentificatie of een burgerservicenummer op te geven, samen met een peildatum of periode.
      operationId: getBewoningen
      parameters:
      - description: Hiermee kun je opgeven welke gerelateerde resources meegeleverd
          moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of
          enkele properties geef je in de expand parameter kommagescheiden op. Properties
          die je wil ontvangen geef je op met de resource-naam gevolgd door de property
          naam, met daartussen een punt. In de definitie van het antwoord kun je bij
          _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie
          [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).
        explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      - description: Hiermee kun je de inhoud van de resource naar behoefte aanpassen
          door een door komma's gescheiden lijst van property namen op te geven. Bij
          opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven.
          Wanneer de fields parameter niet is opgegeven, worden alle properties met
          een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: De datum waarop de resource wordt opgevraagd.
        explode: true
        in: query
        name: peildatum
        required: false
        schema:
          example: 2018-09-09
          format: date
          type: string
        style: form
      - description: De begindatum van de periode waarover de resource wordt opgevraagd.
        explode: true
        in: query
        name: datumVan
        required: false
        schema:
          example: 2018-09-09
          format: date
          type: string
        style: form
      - description: De einddatum van de periode waarover de resource wordt opgevraagd.
        explode: true
        in: query
        name: datumTotEnMet
        required: false
        schema:
          example: 2018-10-09
          format: date
          type: string
        style: form
      - description: |
          Uniek persoonsnummer.
        example: "999993653"
        explode: false
        in: query
        name: burgerservicenummer
        required: false
        schema:
          maxLength: 9
          minLength: 9
          pattern: ^[0-9]*$
          type: string
        style: form
      - description: |
          De unieke identificatie van een verblijfsobject, standplaats of ligplaats.
        explode: true
        in: query
        name: adresseerbaarObjectIdentificatie
        required: false
        schema:
          example: "0226010000038820"
          pattern: ^[0-9]{16}$
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/BewoningHalCollectie'
          description: |
            Zoekactie geslaagd
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
            warning:
              $ref: '#/components/headers/warning'
        "400":
          content:
            application/problem+json:
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.1
                title: Ten minste één parameter moet worden opgegeven.
                status: 400
                detail: The request could not be understood by the server due to malformed
                  syntax. The client SHOULD NOT repeat the request without modification.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: paramsRequired
                invalidParams:
                - type: https://www.vng.nl/realisatie/api/validaties/integer
                  name: verblijfplaats__huisnummer
                  code: integer
                  reason: Waarde is geen geldige integer.
              schema:
                $ref: '#/components/schemas/BadRequestFoutbericht'
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
        "401":
          content:
            application/problem+json:
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.2
                title: Niet correct geauthenticeerd.
                status: 401
                detail: The request requires user authentication. The response MUST
                  include a WWW-Authenticate header field (section 14.47) containing
                  a challenge applicable to the requested resource.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: authentication
              schema:
                $ref: '#/components/schemas/Foutbericht'
          description: Unauthorized
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
        "403":
          content:
            application/problem+json:
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.4
                title: U bent niet geautoriseerd voor deze operatie.
                status: 403
                detail: The server understood the request, but is refusing to fulfill
                  it.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: autorisation
              schema:
                $ref: '#/components/schemas/Foutbericht'
          description: Forbidden
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
        "406":
          content:
            application/problem+json:
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.7
                title: Gevraagde contenttype wordt niet ondersteund.
                status: 406
                detail: The resource identified by the request is only capable of
                  generating response entities which have content characteristics
                  not acceptable according to thr accept headers sent in the request
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: notAcceptable
              schema:
                $ref: '#/components/schemas/Foutbericht'
          description: Not Acceptable
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
        "500":
          content:
            application/problem+json:
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.1
                title: Interne server fout.
                status: 500
                detail: The server encountered an unexpected condition which prevented
                  it from fulfilling the request.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: serverError
              schema:
                $ref: '#/components/schemas/Foutbericht'
          description: Internal Server Error
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
        "501":
          content:
            application/problem+json:
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.2
                title: Not Implemented
                status: 501
                detail: The server does not support the functionality required to
                  fulfill the request.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: notImplemented
              schema:
                $ref: '#/components/schemas/Foutbericht'
          description: Not Implemented
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
        "503":
          content:
            application/problem+json:
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.4
                title: Bronservice {bron} is tijdelijk niet beschikbaar.
                status: 503
                detail: The service is currently unable to handle the request due
                  to a temporary overloading or maintenance of the server.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: notAvailable
              schema:
                $ref: '#/components/schemas/Foutbericht'
          description: Service Unavailable
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Foutbericht'
          description: Er is een onverwachte fout opgetreden
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
      tags:
      - Bewoning
      x-accepts: application/hal+json,application/problem+json
  /bewoningen/{adresseerbaarObjectIdentificatie}:
    get:
      description: |
        Raadpleeg een bewoning door een adresseerbaarobjectIdentificatie op te geven.
      operationId: getBewoning
      parameters:
      - description: Hiermee kun je opgeven welke gerelateerde resources meegeleverd
          moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of
          enkele properties geef je in de expand parameter kommagescheiden op. Properties
          die je wil ontvangen geef je op met de resource-naam gevolgd door de property
          naam, met daartussen een punt. In de definitie van het antwoord kun je bij
          _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie
          [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).
        explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      - description: Hiermee kun je de inhoud van de resource naar behoefte aanpassen
          door een door komma's gescheiden lijst van property namen op te geven. Bij
          opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven.
          Wanneer de fields parameter niet is opgegeven, worden alle properties met
          een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: De datum waarop de resource wordt opgevraagd.
        explode: true
        in: query
        name: peildatum
        required: false
        schema:
          example: 2018-09-09
          format: date
          type: string
        style: form
      - description: De begindatum van de periode waarover de resource wordt opgevraagd.
        explode: true
        in: query
        name: datumVan
        required: false
        schema:
          example: 2018-09-09
          format: date
          type: string
        style: form
      - description: De einddatum van de periode waarover de resource wordt opgevraagd.
        explode: true
        in: query
        name: datumTotEnMet
        required: false
        schema:
          example: 2018-10-09
          format: date
          type: string
        style: form
      - description: |
          De unieke identificatie van een verblijfsobject, standplaats of ligplaats.
        explode: false
        in: path
        name: adresseerbaarObjectIdentificatie
        required: true
        schema:
          example: "0226010000038820"
          pattern: ^[0-9]{16}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/BewoningHal'
          description: |
            Zoekactie geslaagd
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
            warning:
              $ref: '#/components/headers/warning'
        "400":
          content:
            application/problem+json:
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.1
                title: Ten minste één parameter moet worden opgegeven.
                status: 400
                detail: The request could not be understood by the server due to malformed
                  syntax. The client SHOULD NOT repeat the request without modification.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: paramsRequired
                invalidParams:
                - type: https://www.vng.nl/realisatie/api/validaties/integer
                  name: verblijfplaats__huisnummer
                  code: integer
                  reason: Waarde is geen geldige integer.
              schema:
                $ref: '#/components/schemas/BadRequestFoutbericht'
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
        "401":
          content:
            application/problem+json:
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.2
                title: Niet correct geauthenticeerd.
                status: 401
                detail: The request requires user authentication. The response MUST
                  include a WWW-Authenticate header field (section 14.47) containing
                  a challenge applicable to the requested resource.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: authentication
              schema:
                $ref: '#/components/schemas/Foutbericht'
          description: Unauthorized
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
        "403":
          content:
            application/problem+json:
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.4
                title: U bent niet geautoriseerd voor deze operatie.
                status: 403
                detail: The server understood the request, but is refusing to fulfill
                  it.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: autorisation
              schema:
                $ref: '#/components/schemas/Foutbericht'
          description: Forbidden
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
        "404":
          content:
            application/problem+json:
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.5
                title: Opgevraagde resource bestaat niet.
                status: 404
                detail: The server has not found anything matching the Request-URI.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: notFound
              schema:
                $ref: '#/components/schemas/Foutbericht'
          description: Not Found
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
        "406":
          content:
            application/problem+json:
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.7
                title: Gevraagde contenttype wordt niet ondersteund.
                status: 406
                detail: The resource identified by the request is only capable of
                  generating response entities which have content characteristics
                  not acceptable according to thr accept headers sent in the request
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: notAcceptable
              schema:
                $ref: '#/components/schemas/Foutbericht'
          description: Not Acceptable
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
        "500":
          content:
            application/problem+json:
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.1
                title: Interne server fout.
                status: 500
                detail: The server encountered an unexpected condition which prevented
                  it from fulfilling the request.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: serverError
              schema:
                $ref: '#/components/schemas/Foutbericht'
          description: Internal Server Error
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
        "501":
          content:
            application/problem+json:
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.2
                title: Not Implemented
                status: 501
                detail: The server does not support the functionality required to
                  fulfill the request.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: notImplemented
              schema:
                $ref: '#/components/schemas/Foutbericht'
          description: Not Implemented
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
        "503":
          content:
            application/problem+json:
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.4
                title: Bronservice {bron} is tijdelijk niet beschikbaar.
                status: 503
                detail: The service is currently unable to handle the request due
                  to a temporary overloading or maintenance of the server.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: notAvailable
              schema:
                $ref: '#/components/schemas/Foutbericht'
          description: Service Unavailable
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Foutbericht'
          description: Er is een onverwachte fout opgetreden
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
      tags:
      - Bewoning
      x-accepts: application/hal+json,application/problem+json
  /bewoningen/{adresseerbaarObjectIdentificatie}/verloop:
    get:
      description: |
        Raadpleeg het verloop van de bewoning van een adresseerbaar object over een periode door een adresseerbaarobjectIdentificatie en
        een periode op te geven. Het antwoord bevat het aantal verhuizingen van en naar het object en het gemiddelde aantal bewoners in de opgegeven periode.
      operationId: getBewoningverloop
      parameters:
      - description: Hiermee kun je de inhoud van de resource naar behoefte aanpassen
          door een door komma's gescheiden lijst van property namen op te geven. Bij
          opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven.
          Wanneer de fields parameter niet is opgegeven, worden alle properties met
          een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: De begindatum van de periode waarover de resource wordt opgevraagd.
        explode: true
        in: query
        name: datumVan
        required: false
        schema:
          example: 2018-09-09
          format: date
          type: string
        style: form
      - description: De einddatum van de periode waarover de resource wordt opgevraagd.
        explode: true
        in: query
        name: datumTotEnMet
        required: false
        schema:
          example: 2018-10-09
          format: date
          type: string
        style: form
      - description: |
          De unieke identificatie van een verblijfsobject, standplaats of ligplaats.
        explode: false
        in: path
        name: adresseerbaarObjectIdentificatie
        required: true
        schema:
          example: "0226010000038820"
          pattern: ^[0-9]{16}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Verloop'
          description: |
            Zoekactie geslaagd
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
            warning:
              $ref: '#/components/headers/warning'
        "400":
          content:
            application/problem+json:
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.1
                title: Ten minste één parameter moet worden opgegeven.
                status: 400
                detail: The request could not be understood by the server due to malformed
                  syntax. The client SHOULD NOT repeat the request without modification.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: paramsRequired
                invalidParams:
                - type: https://www.vng.nl/realisatie/api/validaties/integer
                  name: verblijfplaats__huisnummer
                  code: integer
                  reason: Waarde is geen geldige integer.
              schema:
                $ref: '#/components/schemas/BadRequestFoutbericht'
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
        "401":
          content:
            application/problem+json:
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.2
                title: Niet correct geauthenticeerd.
                status: 401
                detail: The request requires user authentication. The response MUST
                  include a WWW-Authenticate header field (section 14.47) containing
                  a challenge applicable to the requested resource.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: authentication
              schema:
                $ref: '#/components/schemas/Foutbericht'
          description: Unauthorized
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
        "403":
          content:
            application/problem+json:
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.4
                title: U bent niet geautoriseerd voor deze operatie.
                status: 403
                detail: The server understood the request, but is refusing to fulfill
                  it.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: autorisation
              schema:
                $ref: '#/components/schemas/Foutbericht'
          description: Forbidden
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
        "404":
          content:
            application/problem+json:
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.5
                title: Opgevraagde resource bestaat niet.
                status: 404
                detail: The server has not found anything matching the Request-URI.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: notFound
              schema:
                $ref: '#/components/schemas/Foutbericht'
          description: Not Found
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
        "406":
          content:
            application/problem+json:
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.7
                title: Gevraagde contenttype wordt niet ondersteund.
                status: 406
                detail: The resource identified by the request is only capable of
                  generating response entities which have content characteristics
                  not acceptable according to thr accept headers sent in the request
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: notAcceptable
              schema:
                $ref: '#/components/schemas/Foutbericht'
          description: Not Acceptable
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
        "500":
          content:
            application/problem+json:
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.1
                title: Interne server fout.
                status: 500
                detail: The server encountered an unexpected condition which prevented
                  it from fulfilling the request.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: serverError
              schema:
                $ref: '#/components/schemas/Foutbericht'
          description: Internal Server Error
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
        "501":
          content:
            application/problem+json:
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.2
                title: Not Implemented
                status: 501
                detail: The server does not support the functionality required to
                  fulfill the request.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: notImplemented
              schema:
                $ref: '#/components/schemas/Foutbericht'
          description: Not Implemented
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
        "503":
          content:
            application/problem+json:
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.4
                title: Bronservice {bron} is tijdelijk niet beschikbaar.
                status: 503
                detail: The service is currently unable to handle the request due
                  to a temporary overloading or maintenance of the server.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: notAvailable
              schema:
                $ref: '#/components/schemas/Foutbericht'
          description: Service Unavailable
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Foutbericht'
          description: Er is een onverwachte fout opgetreden
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
      tags:
      - Bewoning
      x-accepts: application/hal+json,application/problem+json
components:
  headers:
    api_version:
      explode: false
      schema:
        description: Geeft een specifieke API-versie aan in de context van een specifieke
          aanroep.
        example: 1.0.0
        type: string
      style: simple
    warning:
      explode: false
      schema:
        description: zie RFC 7234. In het geval een major versie wordt uitgefaseerd,
          gebruiken we warn-code 299 ("Miscellaneous Persistent Warning") en het API
          end-point (inclusief versienummer) als de warn-agent van de warning, gevolgd
          door de warn-text met de human-readable waarschuwing
        example: '299 https://service.../api/.../v1 "Deze versie van de API is verouderd
          en zal uit dienst worden genomen op 2018-02-01. Raadpleeg voor meer informatie
          hier de documentatie: https://omgevingswet.../api/.../v1".'
        type: string
      style: simple
  parameters:
    adresseerbaarObjectIdentificatie:
      description: |
        De unieke identificatie van een verblijfsobject, standplaats of ligplaats.
      explode: false
      in: path
      name: adresseerbaarObjectIdentificatie
      required: true
      schema:
        example: "0226010000038820"
        pattern: ^[0-9]{16}$
        type: string
      style: simple
  schemas:
    Bewoning:
      description: |
        Een bewoning is een adresseerbaar object(verblijfsobject, ligplaats of standplaats) met ingeschreven bewoner(s).
        Iedere samenstelling van bewoners van het object is een bewoning.
      properties:
        adresseerbaarObjectIdentificatie:
          description: |
            De unieke identificatie van een verblijfsobject, standplaats of ligplaats.
          type: string
        bewoners:
          items:
            $ref: '#/components/schemas/Bewoner'
          type: array
        indicatieVeelBewoners:
          description: |
            Geeft aan dat het adresseerbaar object zo veel bewoners heeft of had in de gevraagde periode dat zij
            niet in het antwoord worden opgenomen, met uitzondering van de persoon waarvan de BSN is opgegeven.
          type: boolean
        adressen:
          items:
            $ref: '#/components/schemas/AdresUitgebreid'
          type: array
      type: object
    AdresUitgebreid:
      allOf:
      - $ref: '#/components/schemas/Adres'
      - $ref: '#/components/schemas/AdresUitgebreid_allOf'
      type: object
    BewoningHalBasis:
      allOf:
      - $ref: '#/components/schemas/Bewoning'
      - $ref: '#/components/schemas/BewoningHalBasis_allOf'
    BewoningHal:
      allOf:
      - $ref: '#/components/schemas/BewoningHalBasis'
      - $ref: '#/components/schemas/BewoningHal_allOf'
    BewoningHalCollectie:
      properties:
        _links:
          $ref: '#/components/schemas/HalCollectionLinks'
        _embedded:
          $ref: '#/components/schemas/BewoningHalCollectieEmbedded'
      type: object
    BewoningHalCollectieEmbedded:
      properties:
        bewoningen:
          items:
            $ref: '#/components/schemas/BewoningHal'
          type: array
      type: object
    BewoningLinks:
      properties:
        ingeschrevenPersonen:
          description: |
            De ingeschreven natuurlijk personen die bewoner zijn of waren.
          items:
            $ref: '#/components/schemas/HalLink'
          type: array
        nummeraanduidingen:
          items:
            $ref: '#/components/schemas/HalLink'
          type: array
        adresseerbaarObject:
          $ref: '#/components/schemas/HalLink'
      type: object
    BewoningEmbedded:
      properties:
        ingeschrevenPersonen:
          items:
            $ref: '#/components/schemas/IngeschrevenPersoonHalBasis'
          type: array
      type: object
    Bewoner:
      description: |
        Een bewoner is een persoon die op een (verblijfs)object met een adres is ingeschreven of ingeschreven is geweest.
        * `datumAanvangAdreshouding` : Datum waarop de bewoner van dit adresseerbaar object is ingeschreven.
        * `datumTot` : Datum waarop de bewoner van dit adresseerbaar object is uitgeschreven.
      properties:
        burgerservicenummer:
          example: "555555021"
          type: string
        datumTot:
          $ref: '#/components/schemas/DatumOnvolledig'
        datumAanvangAdreshouding:
          $ref: '#/components/schemas/DatumOnvolledig'
        geheimhoudingPersoonsgegevens:
          description: |
            Gegevens mogen niet worden verstrekt aan derden / maatschappelijke instellingen.
          title: Indicatie geheim
          type: boolean
        indicatieVerblijfsplaatsInOnderzoek:
          description: |
            Geeft aan dat de verblijfplaats in onderzoek is.
          type: boolean
        functieAdres:
          $ref: '#/components/schemas/SoortAdres_enum'
      type: object
    Verloop:
      properties:
        inVerhuizingen:
          description: |
            Het aantal keren dat een alleenstaande of een gezin naar het verblijfsobject, de ligplaats of de standplaats is verhuisd binnen de opgegeven periode.
          example: 3
          type: integer
        uitVerhuizingen:
          description: |
            Het aantal keren dat een alleenstaande of een gezin naar een ander verblijfsobject, ligplaats of standplaats is verhuisd binnen de opgegeven periode.
          example: 14
          type: integer
        gemiddeldAantalBewoners:
          description: |
            Het gemiddelde aantal bewoners van het verblijfsobject, de ligplaats of de standplaats in de opgegeven periode.
          example: 2.7
          format: float
          type: number
      type: object
    BadRequestFoutbericht:
      allOf:
      - $ref: '#/components/schemas/Foutbericht'
      - $ref: '#/components/schemas/BadRequestFoutbericht_allOf'
    Foutbericht:
      description: Terugmelding bij een fout. JSON representatie in lijn met [RFC7807](https://tools.ietf.org/html/rfc7807).
      properties:
        type:
          description: Link naar meer informatie over deze fout
          format: uri
          type: string
        title:
          description: Beschrijving van de fout
          type: string
        status:
          description: Http status code
          type: integer
        detail:
          description: Details over de fout
          type: string
        instance:
          description: Uri van de aanroep die de fout heeft veroorzaakt
          format: uri
          type: string
        code:
          description: Systeemcode die het type fout aangeeft
          minLength: 1
          type: string
      type: object
    InvalidParams:
      description: Details over fouten in opgegeven parameters
      properties:
        type:
          example: https://www.vng.nl/realisatie/api/{major-versie}/validaties/integer
          format: uri
          type: string
        name:
          description: Naam van de parameter
          example: verblijfplaats__huisnummer
          type: string
        code:
          description: Systeemcode die het type fout aangeeft
          example: integer
          minLength: 1
          type: string
        reason:
          description: Beschrijving van de fout op de parameterwaarde
          example: Waarde is geen geldige integer.
          type: string
      type: object
    Adres:
      description: 'Eigenschappen van het adres die kunnen worden hergebruikt in andere
        API''s waarin adresgegevens worden opgenomen. '
      properties:
        straat:
          description: Een naam die door de gemeente aan een openbare ruimte is gegeven.
          example: Laan van de landinrichtingscommissie Duiven-Westervoort
          title: openbareruimte naam
          type: string
        huisnummer:
          description: Een nummer dat door de gemeente aan een adresseerbaar object
            is gegeven.
          example: 1
          type: integer
        huisletter:
          description: Een toevoeging aan een huisnummer in de vorm van een letter
            die door de gemeente aan een adresseerbaar object is gegeven.
          example: A
          type: string
        huisnummertoevoeging:
          description: Een toevoeging aan een huisnummer of een combinatie van huisnummer
            en huisletter die door de gemeente aan een adresseerbaar object is gegeven.
          example: bis
          type: string
        postcode:
          description: De door PostNL vastgestelde code die bij een bepaalde combinatie
            van een straatnaam en een huisnummer hoort.
          example: 6922KZ
          type: string
        woonplaats:
          description: Een woonplaats is een gedeelte van het grondgebied van de gemeente
            met een naam.
          example: Duiven
          title: woonplaats naam
          type: string
      type: object
    HalCollectionLinks:
      description: |
        HalCollectionLinks bevat de self link die elke HAL Resource minimaal moet hebben in zijn _links property
      properties:
        self:
          $ref: '#/components/schemas/HalLink'
      type: object
    HalLink:
      description: De Link Object zoals gespecificeerd in https://tools.ietf.org/html/draft-kelly-json-hal-08#section-5;
        Deze link kan als templated link worden aangeboden. [URI-templating is hier
        beschreven](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/uri-templating.feature).
      properties:
        href:
          example: https://datapunt.voorbeeldgemeente.nl/api/v{major-versie}/resourcename/{resource-identificatie}
          type: string
        templated:
          type: boolean
        title:
          description: Voor mens leesbaar label bij de link
          type: string
      required:
      - href
      type: object
    Href:
      example: https://datapunt.voorbeeldgemeente.nl/api/v{major-versie}/resourcename/{resource-identificatie}
      type: string
    IngeschrevenPersoonHalBasis:
      allOf:
      - $ref: '#/components/schemas/IngeschrevenPersoon'
      - $ref: '#/components/schemas/IngeschrevenPersoonHalBasis_allOf'
    IngeschrevenPersoon:
      properties:
        burgerservicenummer:
          example: "555555021"
          type: string
        geheimhoudingPersoonsgegevens:
          description: |
            Gegevens mogen niet worden verstrekt aan derden / maatschappelijke instellingen.
          title: Indicatie geheim
          type: boolean
        geslachtsaanduiding:
          $ref: '#/components/schemas/Geslacht_enum'
        leeftijd:
          description: |
            Leeftijd in jaren op het moment van bevragen.
          example: 34
          type: integer
        datumEersteInschrijvingGBA:
          $ref: '#/components/schemas/DatumOnvolledig'
        kiesrecht:
          $ref: '#/components/schemas/Kiesrecht'
        naam:
          $ref: '#/components/schemas/NaamPersoon'
        inOnderzoek:
          $ref: '#/components/schemas/PersoonInOnderzoek'
        nationaliteiten:
          items:
            $ref: '#/components/schemas/Nationaliteit'
          type: array
        geboorte:
          $ref: '#/components/schemas/Geboorte'
        opschortingBijhouding:
          $ref: '#/components/schemas/OpschortingBijhouding'
        overlijden:
          $ref: '#/components/schemas/Overlijden'
        verblijfplaats:
          $ref: '#/components/schemas/Verblijfplaats'
        gezagsverhouding:
          $ref: '#/components/schemas/Gezagsverhouding'
        verblijfstitel:
          $ref: '#/components/schemas/Verblijfstitel'
        reisdocumentnummers:
          items:
            $ref: '#/components/schemas/Reisdocumentnummer'
          type: array
      type: object
    Geslacht_enum:
      description: |
        Geeft aan dat de persoon een man of vrouw is, of dat het geslacht (nog) onbekend is
        * `man` - M
        * `vrouw` - V
        * `onbekend` - O
      enum:
      - man
      - vrouw
      - onbekend
      type: string
    DatumOnvolledig:
      description: Gegevens over de datums die mogelijk niet volledig zijn.
      properties:
        dag:
          description: Als de dag van de datum bekend is wordt dit element gevuld,
            ook als de volledige datum bekend is.
          example: 3
          maximum: 31
          minimum: 1
          type: integer
        datum:
          description: Als de volledige datum bekend is wordt de datum gevuld die
            in de date definitie past.
          example: 1989-05-03
          format: date
          type: string
        jaar:
          description: Als het jaar van de datum bekend is wordt dit element gevuld,
            ook als de volledige datum bekend is.
          example: 1989
          maximum: 9999
          type: integer
        maand:
          description: Als de maand van een datum bekend is wordt dit element gevuld,
            ook als de volledige datum bekend is.
          example: 5
          maximum: 12
          minimum: 1
          type: integer
      type: object
    Kiesrecht:
      properties:
        europeesKiesrecht:
          description: |
            Geeft aan of persoon een oproep moet ontvangen voor verkiezingen voor het Europees parlement.
          example: true
          type: boolean
        uitgeslotenVanKiesrecht:
          example: true
          type: boolean
        einddatumUitsluitingEuropeesKiesrecht:
          $ref: '#/components/schemas/DatumOnvolledig'
        einddatumUitsluitingKiesrecht:
          $ref: '#/components/schemas/DatumOnvolledig'
      type: object
    NaamPersoon:
      allOf:
      - $ref: '#/components/schemas/Naam'
      - $ref: '#/components/schemas/NaamPersoon_allOf'
    Naam:
      properties:
        geslachtsnaam:
          description: |
            De achternaam van een persoon.
          example: Vries
          type: string
        voorletters:
          description: |
            De voorletters van de persoon, afgeleid van de voornamen.
          example: P.J.
          type: string
        voornamen:
          description: |
            De verzameling namen voor de geslachtsnaam, gescheiden door spaties.
          example: Pieter Jan
          type: string
        voorvoegsel:
          example: de
          type: string
        adellijkeTitelPredikaat:
          $ref: '#/components/schemas/Waardetabel'
        inOnderzoek:
          $ref: '#/components/schemas/NaamInOnderzoek'
      type: object
    Waardetabel:
      properties:
        code:
          example: "6030"
          type: string
        omschrijving:
          example: Nederland
          type: string
      type: object
    NaamInOnderzoek:
      description: |
        Geeft aan welke gegevens over de naam in onderzoek zijn. Zie de [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/in_onderzoek.feature)
      properties:
        geslachtsnaam:
          type: boolean
        voornamen:
          type: boolean
        voorvoegsel:
          type: boolean
        adellijkeTitelPredikaat:
          type: boolean
        datumIngangOnderzoek:
          $ref: '#/components/schemas/DatumOnvolledig'
      type: object
    Naamgebruik_enum:
      description: |
        De manier waarop de geslachtsnaam van persoon en partner van persoon moet worden verwerkt in de manier waarop persoon wil worden aangesproken
        * `eigen` - E - gebruik alleen de eigen naam
        * `eigen_partner` - N - gebruik de eigen naam voor de partnernaam
        * `partner` - P gebruik alleen de partnernaam
        * `partner_eigen` - V - gebruik de partnernaam voor de eigen naam.


        De aanduiding naamgebruik is verwerkt in Aanhef, Aanschrijfwijze en gebruikInLopendeTekst."
      enum:
      - eigen
      - eigen_partner
      - partner
      - partner_eigen
      type: string
    NaamPersoonInOnderzoek:
      allOf:
      - $ref: '#/components/schemas/NaamInOnderzoek'
      - $ref: '#/components/schemas/NaamPersoonInOnderzoek_allOf'
    PersoonInOnderzoek:
      description: |
        Geeft aan welke gegevens van de persoon in onderzoek zijn. Zie de [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/in_onderzoek.feature).
      properties:
        burgerservicenummer:
          type: boolean
        geslachtsaanduiding:
          type: boolean
        datumIngangOnderzoek:
          $ref: '#/components/schemas/DatumOnvolledig'
      type: object
    Nationaliteit:
      description: |
        * **redenOpname** : De reden op grond waarvan de persoon de nationaliteit gekregen heeft.
      properties:
        aanduidingBijzonderNederlanderschap:
          $ref: '#/components/schemas/AanduidingBijzonderNederlanderschap_enum'
        datumIngangGeldigheid:
          $ref: '#/components/schemas/DatumOnvolledig'
        nationaliteit:
          $ref: '#/components/schemas/Waardetabel'
        redenOpname:
          $ref: '#/components/schemas/Waardetabel'
        inOnderzoek:
          $ref: '#/components/schemas/NationaliteitInOnderzoek'
      type: object
    AanduidingBijzonderNederlanderschap_enum:
      description: |
        Geeft aan dat de persoon behandeld wordt als Nederlander, of dat door de rechter is vastgesteld dat de persoon niet de Nederlandse nationaliteit bezit
        * `behandeld_als_nederlander` - B
        * `vastgesteld_niet_nederlander` - V
      enum:
      - behandeld_als_nederlander
      - vastgesteld_niet_nederlander
      type: string
    NationaliteitInOnderzoek:
      description: |
        Geeft aan welke gegevens over de nationaliteit in onderzoek zijn. Zie de [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/in_onderzoek.feature)
      properties:
        aanduidingBijzonderNederlanderschap:
          type: boolean
        nationaliteit:
          type: boolean
        redenOpname:
          type: boolean
        datumIngangOnderzoek:
          $ref: '#/components/schemas/DatumOnvolledig'
      type: object
    Geboorte:
      allOf:
      - $ref: '#/components/schemas/Geboortedatum'
      - $ref: '#/components/schemas/Geboorte_allOf'
    Geboortedatum:
      description: |
        Gegevens over de geboorte van respectievelijk de persoon, de ouder, de echtgenoot/geregistreerd partner, de eerdere echtgenoot/geregistreerd partner of het kind.
        * **datum** : Datum waarop de persoon is geboren
        * **land** : Land waar de persoon is geboren
        * **plaats** : De plaats waar de persoon is geboren. Voor een plaats buiten Nederland is gemeentecode=1999 (RNI) en gemeentenaam de buitenlandse plaatsnaam of aanduiding.
      properties:
        datum:
          $ref: '#/components/schemas/DatumOnvolledig'
      type: object
    GeboorteInOnderzoek:
      description: |
        Geeft aan welke gegevens over de geboorte van de persoon in onderzoek zijn. Zie de [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/in_onderzoek.feature)
      properties:
        datum:
          type: boolean
        land:
          type: boolean
        plaats:
          type: boolean
        datumIngangOnderzoek:
          $ref: '#/components/schemas/DatumOnvolledig'
      type: object
    OpschortingBijhouding:
      description: |
        * **datum**: de datum waarop de bijhouding van de persoonsgegevens is gestaakt.
      properties:
        reden:
          $ref: '#/components/schemas/RedenOpschortingBijhouding_enum'
        datum:
          $ref: '#/components/schemas/DatumOnvolledig'
      type: object
    RedenOpschortingBijhouding_enum:
      description: |
        Redenen voor opschorting van de bijhouding
        * `overlijden` - O
        * `emigratie` - E
        * `ministerieel_besluit` - M
        * `pl_aangelegd_in_de_rni` - R - opgeschort omdat persoon is ingeschreven in het Register Niet Ingezeten (RNI).
        * `fout` - F
      enum:
      - overlijden
      - emigratie
      - ministerieel_besluit
      - pl_aangelegd_in_de_rni
      - fout
      type: string
    Overlijden:
      description: |
        Gegevens over het overlijden van de persoon.
        * **datum** : datum waarop de persoon is overleden.
        * **land** : land waar de persoon is overleden.
        * **plaats** : gemeente waar de persoon is overleden. Is de persoon overleden buiten Nederland, dan bevat het antwoord alleen een buitenlandse plaatsnaam of aanduiding.
      properties:
        indicatieOverleden:
          description: |
            Geeft aan dat iemand is overleden (waarde true), ongeacht of de overlijdensdatum bekend is.
          type: boolean
        datum:
          $ref: '#/components/schemas/DatumOnvolledig'
        land:
          $ref: '#/components/schemas/Waardetabel'
        plaats:
          $ref: '#/components/schemas/Waardetabel'
        inOnderzoek:
          $ref: '#/components/schemas/OverlijdenInOnderzoek'
      type: object
    OverlijdenInOnderzoek:
      description: |
        Geeft aan welke gegevens over het overlijden van de persoon in onderzoek zijn. Zie de [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/in_onderzoek.feature)
      properties:
        datum:
          type: boolean
        land:
          type: boolean
        plaats:
          type: boolean
        datumIngangOnderzoek:
          $ref: '#/components/schemas/DatumOnvolledig'
      type: object
    Verblijfplaats:
      allOf:
      - $ref: '#/components/schemas/Adres'
      - $ref: '#/components/schemas/Verblijfplaats_allOf'
    AanduidingBijHuisnummer_enum:
      description: |
        De aanduiding die wordt gebruikt voor adressen die geen straatnaam en huisnummeraanduidingen hebben
        * `tegenover` - to
        * `bij` - by
      enum:
      - tegenover
      - bij
      type: string
    SoortAdres_enum:
      description: |
        Aanduiding van het soort adres
        * `woonadres` - W - adres waar de persoon woont
        * `briefadres` - B - het adres van een andere persoon of van een instelling (de zogenoemde briefadresgever). Met dit adres van de briefadresgever is de persoon zonder woonadres toch bereikbaar voor de overheid.
      enum:
      - woonadres
      - briefadres
      type: string
    VerblijfplaatsInOnderzoek:
      description: |
        Geeft aan welke gegevens over het verblijf en adres van de persoon in onderzoek zijn. Elementen van het GBA-adres zelf (Dat zou eigenlijk een BAG-adres moeten zijn) kunnen niet in onderzoek zijn. Wel de relatie naar de nummeraanduiding. Dat wordt gedaan door de identificatiecodeNummeraanduiding in onderzoek te zetten. Zie de [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/in_onderzoek.feature)
      properties:
        aanduidingBijHuisnummer:
          type: boolean
        datumAanvangAdreshouding:
          type: boolean
        datumIngangGeldigheid:
          type: boolean
        datumInschrijvingInGemeente:
          type: boolean
        datumVestigingInNederland:
          type: boolean
        functieAdres:
          type: boolean
        gemeenteVanInschrijving:
          type: boolean
        huisletter:
          type: boolean
        huisnummer:
          type: boolean
        huisnummertoevoeging:
          type: boolean
        nummeraanduidingIdentificatie:
          type: boolean
        adresseerbaarObjectIdentificatie:
          type: boolean
        landVanwaarIngeschreven:
          type: boolean
        locatiebeschrijving:
          type: boolean
        straat:
          type: boolean
        postcode:
          type: boolean
        korteNaam:
          type: boolean
        verblijfBuitenland:
          type: boolean
        woonplaats:
          type: boolean
        datumIngangOnderzoek:
          $ref: '#/components/schemas/DatumOnvolledig'
      type: object
    Gezagsverhouding:
      description: |
        Gegevens over het gezag over de persoon.
      properties:
        indicatieCurateleRegister:
          description: |
            Geeft aan dat de persoon onder curatele is gesteld.
          example: true
          type: boolean
        indicatieGezagMinderjarige:
          $ref: '#/components/schemas/IndicatieGezagMinderjarige_enum'
        inOnderzoek:
          $ref: '#/components/schemas/GezagsverhoudingInOnderzoek'
      type: object
    IndicatieGezagMinderjarige_enum:
      description: |
        Geeft aan wie het gezag heeft over de minderjarige persoon.
        * `ouder1` - 1
        * `ouder2` - 2
        * `derden` - D
        * `ouder1_en_derde` - 1D
        * `ouder2_en_derde` - 2D
        * `ouder1_en_ouder2` - 12
      enum:
      - ouder1
      - ouder2
      - derden
      - ouder1_en_derde
      - ouder2_en_derde
      - ouder1_en_ouder2
      type: string
    GezagsverhoudingInOnderzoek:
      description: |
        Geeft aan welke gegevens van de gezagsverhouding in onderzoek zijn. Zie de [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/in_onderzoek.feature)
      properties:
        indicatieCurateleRegister:
          type: boolean
        indicatieGezagMinderjarige:
          type: boolean
        datumIngangOnderzoek:
          $ref: '#/components/schemas/DatumOnvolledig'
      type: object
    Verblijfstitel:
      description: |
        Gegevens over de verblijfsrechtelijke status van de persoon.
        * **datumEinde**: Datum waarop de geldigheid van de gegevens over de verblijfstitel is beëindigd.
        * **datumIngang**: Datum waarop de gegevens over de verblijfstitel geldig zijn geworden.
        * **aanduiding** : Verblijfstiteltabel die aangeeft over welke verblijfsrechtelijke status de persoon beschikt.
      properties:
        aanduiding:
          $ref: '#/components/schemas/Waardetabel'
        datumEinde:
          $ref: '#/components/schemas/DatumOnvolledig'
        datumIngang:
          $ref: '#/components/schemas/DatumOnvolledig'
        inOnderzoek:
          $ref: '#/components/schemas/VerblijfstitelInOnderzoek'
      type: object
    VerblijfstitelInOnderzoek:
      description: |
        Geeft aan welke gegevens over de verblijfstitel in onderzoek zijn. Zie de [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/in_onderzoek.feature)
      properties:
        aanduiding:
          type: boolean
        datumEinde:
          type: boolean
        datumIngang:
          type: boolean
        datumIngangOnderzoek:
          $ref: '#/components/schemas/DatumOnvolledig'
      type: object
    Reisdocumentnummer:
      description: |
        Het nummer van het verstrekte Nederlandse reisdocument.
      example: "546376728"
      type: string
    IngeschrevenPersoonLinks:
      properties:
        self:
          $ref: '#/components/schemas/HalLink'
        ouders:
          description: |
            De ouders van de persoon.
          items:
            $ref: '#/components/schemas/HalLink'
          type: array
        reisdocumenten:
          description: |
            De reisdocumenten die aan de persoon zijn verstrekt.
          items:
            $ref: '#/components/schemas/HalLink'
          type: array
        kinderen:
          description: |
            De kinderen van de persoon.
          items:
            $ref: '#/components/schemas/HalLink'
          type: array
        partners:
          description: |
            De actuele bij de ingeschreven persoon geregistreerde huwelijken en geregistreerd partnerschappen. Een beëindigd huwelijk of geregistreerd partnerschap wordt niet teruggegeven.
          items:
            $ref: '#/components/schemas/HalLink'
          type: array
        partnerhistorie:
          $ref: '#/components/schemas/HalLink'
        verblijfplaatshistorie:
          $ref: '#/components/schemas/HalLink'
        verblijfstitelhistorie:
          $ref: '#/components/schemas/HalLink'
        nationaliteitHistorie:
          $ref: '#/components/schemas/HalLink'
        adres:
          $ref: '#/components/schemas/HalLink'
      type: object
    AdresUitgebreid_allOf:
      properties:
        nummeraanduidingIdentificatie:
          description: |
            De unieke aanduiding van een nummeraanduiding.
          example: "0518200001645858"
          type: string
    BewoningHalBasis_allOf:
      properties:
        _links:
          $ref: '#/components/schemas/BewoningLinks'
    BewoningHal_allOf:
      properties:
        _embedded:
          $ref: '#/components/schemas/BewoningEmbedded'
    BadRequestFoutbericht_allOf:
      properties:
        invalidParams:
          description: Foutmelding per fout in een parameter. Alle gevonden fouten
            worden één keer teruggemeld.
          items:
            $ref: '#/components/schemas/InvalidParams'
          type: array
      type: object
    IngeschrevenPersoonHalBasis_allOf:
      properties:
        _links:
          $ref: '#/components/schemas/IngeschrevenPersoonLinks'
    NaamPersoon_allOf:
      properties:
        aanhef:
          description: |
            Kun je gebruiken als aanhef in een brief gericht aan persoon.
          example: Hoogwelgeboren heer
          type: string
        aanschrijfwijze:
          description: |
            Samengestelde naam die je kunt gebruiken in de communicatie met de persoon.
          example: H.W. baron van den Aedel
          type: string
        regelVoorafgaandAanAanschrijfwijze:
          description: |
            Deze regel moet als aparte regel boven de aanschrijfwijze worden geplaatst. Komt alleen voor bij personen met een adellijke titel of predicaat.
          example: De hoogwelgeboren heer
          type: string
        gebruikInLopendeTekst:
          description: |
            Naam van persoon die je kunt gebruiken als je in lopende tekst (bijvoorbeeld in een brief) aan persoon refereert.
          example: baron Van den Aedel
          type: string
        aanduidingNaamgebruik:
          $ref: '#/components/schemas/Naamgebruik_enum'
        inOnderzoek:
          $ref: '#/components/schemas/NaamPersoonInOnderzoek'
    NaamPersoonInOnderzoek_allOf:
      properties:
        aanduidingNaamgebruik:
          type: boolean
    Geboorte_allOf:
      description: |
        Gegevens over de geboorte.
        * **datum** : datum waarop de persoon is geboren.
        * **land** : land waar de persoon is geboren
        * **plaats** : gemeente waar de persoon is geboren. Is de persoon geboren buiten Nederland, dan bevat het antwoord alleen een buitenlandse plaatsnaam of aanduiding.
      properties:
        land:
          $ref: '#/components/schemas/Waardetabel'
        plaats:
          $ref: '#/components/schemas/Waardetabel'
        inOnderzoek:
          $ref: '#/components/schemas/GeboorteInOnderzoek'
    Verblijfplaats_allOf:
      description: |
        Gegevens over het verblijf of de woonlocatie van een persoon.
        * **datumAanvangAdreshuishouding** : de datum van aangifte of ambtshalve melding van verblijf en adres.
        * **datumIngangGeldigheid** : datum waarop de gegevens over de verblijfplaats geldig zijn geworden.
        * **datumInschrijvingInGemeente**: bij inschrijving op grond van een verhuisaangifte door de burger is dit de aangiftedatum. Bij inschrijving op grond van een geboorteakte is dit de geboortedatum. Bij ambtshalve inschrijving is dit de datum waarop het voornemen van ambtshalve opneming schriftelijk aan de persoon is medegedeeld.
        * **datumVestigingInNederland** : datum van inschrijving in Nederland.
        * **landVanWaarIngeschreven** : het land waar de persoon woonde voor (her)vestiging in Nederland.
        * **gemeenteVanInschrijving** : de gemeente waar de persoon verblijft en is ingeschreven. De code kan voorloopnullen bevatten."
      properties:
        adresseerbaarObjectIdentificatie:
          description: |
            De verblijfplaats van de persoon kan een ligplaats, een standplaats of een verblijfsobject zijn.
          example: "0226010000038820"
          type: string
        aanduidingBijHuisnummer:
          $ref: '#/components/schemas/AanduidingBijHuisnummer_enum'
        nummeraanduidingIdentificatie:
          description: |
            Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.
          example: "0518200000366054"
          type: string
        functieAdres:
          $ref: '#/components/schemas/SoortAdres_enum'
        indicatieVestigingVanuitBuitenland:
          description: |
            Geeft aan dat de ingeschreven persoon zich vanuit het buitenland heeft ingeschreven.
          type: boolean
        locatiebeschrijving:
          description: |
            Omschrijving van de ligging van een verblijfsobject, standplaats of ligplaats.
          example: Naast de derde brug
          type: string
        korteNaam:
          description: |
            De officiële openbareruimtenaam uit de Basisregistratie Gebouwen en Adressen (BAG) of een verkorte versie.
          type: string
        vanuitVertrokkenOnbekendWaarheen:
          description: |
            Geeft aan dat de persoon is teruggekeerd uit een situatie van 'vertrokken onbekend waarheen.'
          example: true
          type: boolean
        datumAanvangAdreshouding:
          $ref: '#/components/schemas/DatumOnvolledig'
        datumIngangGeldigheid:
          $ref: '#/components/schemas/DatumOnvolledig'
        datumInschrijvingInGemeente:
          $ref: '#/components/schemas/DatumOnvolledig'
        datumVestigingInNederland:
          $ref: '#/components/schemas/DatumOnvolledig'
        gemeenteVanInschrijving:
          $ref: '#/components/schemas/Waardetabel'
        landVanwaarIngeschreven:
          $ref: '#/components/schemas/Waardetabel'
        adresregel1:
          description: |
            Het eerste deel van een adres is een combinatie van de straat en huisnummer.
          example: Laan van de landinrichtingscommissie Duiven-Westervoort 26A-3
          type: string
        adresregel2:
          description: |
            Het tweede deel van een adres is een combinatie van woonplaats eventueel in combinatie met de postcode.
          example: 1234AA Nootdorp
          type: string
        adresregel3:
          description: |
            Het derde deel van een adres is optioneel. Het gaat om een of meer geografische gebieden van het adres in het buitenland.
          example: Selangor
          type: string
        vertrokkenOnbekendWaarheen:
          description: |
            Indicatie dat de ingeschreven persoon is vertrokken naar het buitenland, maar dat niet bekend is waar naar toe.
          type: boolean
        land:
          $ref: '#/components/schemas/Waardetabel'
        inOnderzoek:
          $ref: '#/components/schemas/VerblijfplaatsInOnderzoek'

