/*
 * Bewoning
 * API voor het zoeken en raadplegen van bewoningen en metagegevens over bewoning (verloop). Een bewoning is een adresseerbaar object (verblijfsobject, ligplaats of standplaats) met ingeschreven bewoner(s). Iedere samenstelling van bewoners van het object is een bewoning. Overleden personen maken onderdeel uit van een bewoning tot het moment van overlijden. Gegevens over de bewoners zijn actueel. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Verloop
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-22T11:06:48.381Z[Etc/UTC]")
public class Verloop {
  public static final String SERIALIZED_NAME_IN_VERHUIZINGEN = "inVerhuizingen";
  @SerializedName(SERIALIZED_NAME_IN_VERHUIZINGEN)
  private Integer inVerhuizingen;

  public static final String SERIALIZED_NAME_UIT_VERHUIZINGEN = "uitVerhuizingen";
  @SerializedName(SERIALIZED_NAME_UIT_VERHUIZINGEN)
  private Integer uitVerhuizingen;

  public static final String SERIALIZED_NAME_GEMIDDELD_AANTAL_BEWONERS = "gemiddeldAantalBewoners";
  @SerializedName(SERIALIZED_NAME_GEMIDDELD_AANTAL_BEWONERS)
  private Float gemiddeldAantalBewoners;


  public Verloop inVerhuizingen(Integer inVerhuizingen) {
    
    this.inVerhuizingen = inVerhuizingen;
    return this;
  }

   /**
   * Het aantal keren dat een alleenstaande of een gezin naar het verblijfsobject, de ligplaats of de standplaats is verhuisd binnen de opgegeven periode. 
   * @return inVerhuizingen
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3", value = "Het aantal keren dat een alleenstaande of een gezin naar het verblijfsobject, de ligplaats of de standplaats is verhuisd binnen de opgegeven periode. ")

  public Integer getInVerhuizingen() {
    return inVerhuizingen;
  }


  public void setInVerhuizingen(Integer inVerhuizingen) {
    this.inVerhuizingen = inVerhuizingen;
  }


  public Verloop uitVerhuizingen(Integer uitVerhuizingen) {
    
    this.uitVerhuizingen = uitVerhuizingen;
    return this;
  }

   /**
   * Het aantal keren dat een alleenstaande of een gezin naar een ander verblijfsobject, ligplaats of standplaats is verhuisd binnen de opgegeven periode. 
   * @return uitVerhuizingen
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "14", value = "Het aantal keren dat een alleenstaande of een gezin naar een ander verblijfsobject, ligplaats of standplaats is verhuisd binnen de opgegeven periode. ")

  public Integer getUitVerhuizingen() {
    return uitVerhuizingen;
  }


  public void setUitVerhuizingen(Integer uitVerhuizingen) {
    this.uitVerhuizingen = uitVerhuizingen;
  }


  public Verloop gemiddeldAantalBewoners(Float gemiddeldAantalBewoners) {
    
    this.gemiddeldAantalBewoners = gemiddeldAantalBewoners;
    return this;
  }

   /**
   * Het gemiddelde aantal bewoners van het verblijfsobject, de ligplaats of de standplaats in de opgegeven periode. 
   * @return gemiddeldAantalBewoners
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2.7", value = "Het gemiddelde aantal bewoners van het verblijfsobject, de ligplaats of de standplaats in de opgegeven periode. ")

  public Float getGemiddeldAantalBewoners() {
    return gemiddeldAantalBewoners;
  }


  public void setGemiddeldAantalBewoners(Float gemiddeldAantalBewoners) {
    this.gemiddeldAantalBewoners = gemiddeldAantalBewoners;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Verloop verloop = (Verloop) o;
    return Objects.equals(this.inVerhuizingen, verloop.inVerhuizingen) &&
        Objects.equals(this.uitVerhuizingen, verloop.uitVerhuizingen) &&
        Objects.equals(this.gemiddeldAantalBewoners, verloop.gemiddeldAantalBewoners);
  }

  @Override
  public int hashCode() {
    return Objects.hash(inVerhuizingen, uitVerhuizingen, gemiddeldAantalBewoners);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Verloop {\n");
    sb.append("    inVerhuizingen: ").append(toIndentedString(inVerhuizingen)).append("\n");
    sb.append("    uitVerhuizingen: ").append(toIndentedString(uitVerhuizingen)).append("\n");
    sb.append("    gemiddeldAantalBewoners: ").append(toIndentedString(gemiddeldAantalBewoners)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

