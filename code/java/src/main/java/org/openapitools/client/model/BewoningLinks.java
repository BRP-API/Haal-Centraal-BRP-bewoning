/*
 * Bewoning
 * API voor het zoeken en raadplegen van bewoningen en metagegevens over bewoning (verloop). Een bewoning is een adresseerbaar object (verblijfsobject, ligplaats of standplaats) met ingeschreven bewoner(s). Iedere samenstelling van bewoners van het object is een bewoning. Overleden personen maken onderdeel uit van een bewoning tot het moment van overlijden. Gegevens over de bewoners zijn actueel. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.HalLink;

/**
 * BewoningLinks
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-22T11:06:48.381Z[Etc/UTC]")
public class BewoningLinks {
  public static final String SERIALIZED_NAME_INGESCHREVEN_PERSONEN = "ingeschrevenPersonen";
  @SerializedName(SERIALIZED_NAME_INGESCHREVEN_PERSONEN)
  private List<HalLink> ingeschrevenPersonen = null;

  public static final String SERIALIZED_NAME_NUMMERAANDUIDINGEN = "nummeraanduidingen";
  @SerializedName(SERIALIZED_NAME_NUMMERAANDUIDINGEN)
  private List<HalLink> nummeraanduidingen = null;

  public static final String SERIALIZED_NAME_ADRESSEERBAAR_OBJECT = "adresseerbaarObject";
  @SerializedName(SERIALIZED_NAME_ADRESSEERBAAR_OBJECT)
  private HalLink adresseerbaarObject;


  public BewoningLinks ingeschrevenPersonen(List<HalLink> ingeschrevenPersonen) {
    
    this.ingeschrevenPersonen = ingeschrevenPersonen;
    return this;
  }

  public BewoningLinks addIngeschrevenPersonenItem(HalLink ingeschrevenPersonenItem) {
    if (this.ingeschrevenPersonen == null) {
      this.ingeschrevenPersonen = new ArrayList<>();
    }
    this.ingeschrevenPersonen.add(ingeschrevenPersonenItem);
    return this;
  }

   /**
   * De ingeschreven natuurlijk personen die bewoner zijn of waren. 
   * @return ingeschrevenPersonen
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "De ingeschreven natuurlijk personen die bewoner zijn of waren. ")

  public List<HalLink> getIngeschrevenPersonen() {
    return ingeschrevenPersonen;
  }


  public void setIngeschrevenPersonen(List<HalLink> ingeschrevenPersonen) {
    this.ingeschrevenPersonen = ingeschrevenPersonen;
  }


  public BewoningLinks nummeraanduidingen(List<HalLink> nummeraanduidingen) {
    
    this.nummeraanduidingen = nummeraanduidingen;
    return this;
  }

  public BewoningLinks addNummeraanduidingenItem(HalLink nummeraanduidingenItem) {
    if (this.nummeraanduidingen == null) {
      this.nummeraanduidingen = new ArrayList<>();
    }
    this.nummeraanduidingen.add(nummeraanduidingenItem);
    return this;
  }

   /**
   * Get nummeraanduidingen
   * @return nummeraanduidingen
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<HalLink> getNummeraanduidingen() {
    return nummeraanduidingen;
  }


  public void setNummeraanduidingen(List<HalLink> nummeraanduidingen) {
    this.nummeraanduidingen = nummeraanduidingen;
  }


  public BewoningLinks adresseerbaarObject(HalLink adresseerbaarObject) {
    
    this.adresseerbaarObject = adresseerbaarObject;
    return this;
  }

   /**
   * Get adresseerbaarObject
   * @return adresseerbaarObject
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public HalLink getAdresseerbaarObject() {
    return adresseerbaarObject;
  }


  public void setAdresseerbaarObject(HalLink adresseerbaarObject) {
    this.adresseerbaarObject = adresseerbaarObject;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BewoningLinks bewoningLinks = (BewoningLinks) o;
    return Objects.equals(this.ingeschrevenPersonen, bewoningLinks.ingeschrevenPersonen) &&
        Objects.equals(this.nummeraanduidingen, bewoningLinks.nummeraanduidingen) &&
        Objects.equals(this.adresseerbaarObject, bewoningLinks.adresseerbaarObject);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ingeschrevenPersonen, nummeraanduidingen, adresseerbaarObject);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BewoningLinks {\n");
    sb.append("    ingeschrevenPersonen: ").append(toIndentedString(ingeschrevenPersonen)).append("\n");
    sb.append("    nummeraanduidingen: ").append(toIndentedString(nummeraanduidingen)).append("\n");
    sb.append("    adresseerbaarObject: ").append(toIndentedString(adresseerbaarObject)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

