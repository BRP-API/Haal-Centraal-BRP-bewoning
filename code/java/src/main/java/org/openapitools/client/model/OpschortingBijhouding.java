/*
 * Bewoning
 * API voor het zoeken en raadplegen van bewoningen en metagegevens over bewoning (verloop). Een bewoning is een adresseerbaar object (verblijfsobject, ligplaats of standplaats) met ingeschreven bewoner(s). Iedere samenstelling van bewoners van het object is een bewoning. Overleden personen maken onderdeel uit van een bewoning tot het moment van overlijden. Gegevens over de bewoners zijn actueel. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.DatumOnvolledig;
import org.openapitools.client.model.RedenOpschortingBijhoudingEnum;

/**
 * * **datum**: de datum waarop de bijhouding van de persoonsgegevens is gestaakt. 
 */
@ApiModel(description = "* **datum**: de datum waarop de bijhouding van de persoonsgegevens is gestaakt. ")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-03T15:01:26.333Z[Etc/UTC]")
public class OpschortingBijhouding {
  public static final String SERIALIZED_NAME_REDEN = "reden";
  @SerializedName(SERIALIZED_NAME_REDEN)
  private RedenOpschortingBijhoudingEnum reden;

  public static final String SERIALIZED_NAME_DATUM = "datum";
  @SerializedName(SERIALIZED_NAME_DATUM)
  private DatumOnvolledig datum;


  public OpschortingBijhouding reden(RedenOpschortingBijhoudingEnum reden) {
    
    this.reden = reden;
    return this;
  }

   /**
   * Get reden
   * @return reden
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RedenOpschortingBijhoudingEnum getReden() {
    return reden;
  }


  public void setReden(RedenOpschortingBijhoudingEnum reden) {
    this.reden = reden;
  }


  public OpschortingBijhouding datum(DatumOnvolledig datum) {
    
    this.datum = datum;
    return this;
  }

   /**
   * Get datum
   * @return datum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DatumOnvolledig getDatum() {
    return datum;
  }


  public void setDatum(DatumOnvolledig datum) {
    this.datum = datum;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OpschortingBijhouding opschortingBijhouding = (OpschortingBijhouding) o;
    return Objects.equals(this.reden, opschortingBijhouding.reden) &&
        Objects.equals(this.datum, opschortingBijhouding.datum);
  }

  @Override
  public int hashCode() {
    return Objects.hash(reden, datum);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OpschortingBijhouding {\n");
    sb.append("    reden: ").append(toIndentedString(reden)).append("\n");
    sb.append("    datum: ").append(toIndentedString(datum)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

