/* 
 * Bewoning
 *
 * API voor het zoeken en raadplegen van bewoningen en metagegevens over bewoning (verloop). Een bewoning is een adresseerbaar object (verblijfsobject, ligplaats of standplaats) met ingeschreven bewoner(s). Iedere samenstelling van bewoners van het object is een bewoning. Overleden personen maken onderdeel uit van een bewoning tot het moment van overlijden. Gegevens over de bewoners zijn actueel. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Threading;
using RestSharp;
using Org.OpenAPITools.Client;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Api
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IBewoningApi : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Raadpleeg een bewoning door een adresseerbaarobjectIdentificatie op te geven. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats. </param>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>BewoningHal</returns>
        BewoningHal GetBewoning (string adresseerbaarObjectIdentificatie, string expand = default(string), string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Raadpleeg een bewoning door een adresseerbaarobjectIdentificatie op te geven. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats. </param>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>ApiResponse of BewoningHal</returns>
        ApiResponse<BewoningHal> GetBewoningWithHttpInfo (string adresseerbaarObjectIdentificatie, string expand = default(string), string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Zoek bewoningen door een adresseerbaarObjectIdentificatie of een burgerservicenummer op te geven, samen met een peildatum of periode. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="burgerservicenummer">Uniek persoonsnummer.  (optional)</param>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats.  (optional)</param>
        /// <returns>BewoningHalCollectie</returns>
        BewoningHalCollectie GetBewoningen (string expand = default(string), string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), string burgerservicenummer = default(string), string adresseerbaarObjectIdentificatie = default(string));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Zoek bewoningen door een adresseerbaarObjectIdentificatie of een burgerservicenummer op te geven, samen met een peildatum of periode. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="burgerservicenummer">Uniek persoonsnummer.  (optional)</param>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats.  (optional)</param>
        /// <returns>ApiResponse of BewoningHalCollectie</returns>
        ApiResponse<BewoningHalCollectie> GetBewoningenWithHttpInfo (string expand = default(string), string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), string burgerservicenummer = default(string), string adresseerbaarObjectIdentificatie = default(string));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Raadpleeg het verloop van de bewoning van een adresseerbaar object over een periode door een adresseerbaarobjectIdentificatie en een periode op te geven. Het antwoord bevat het aantal verhuizingen van en naar het object en het gemiddelde aantal bewoners in de opgegeven periode. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats. </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>Verloop</returns>
        Verloop GetBewoningverloop (string adresseerbaarObjectIdentificatie, string fields = default(string), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Raadpleeg het verloop van de bewoning van een adresseerbaar object over een periode door een adresseerbaarobjectIdentificatie en een periode op te geven. Het antwoord bevat het aantal verhuizingen van en naar het object en het gemiddelde aantal bewoners in de opgegeven periode. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats. </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>ApiResponse of Verloop</returns>
        ApiResponse<Verloop> GetBewoningverloopWithHttpInfo (string adresseerbaarObjectIdentificatie, string fields = default(string), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?));
        #endregion Synchronous Operations
        #region Asynchronous Operations
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Raadpleeg een bewoning door een adresseerbaarobjectIdentificatie op te geven. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats. </param>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of BewoningHal</returns>
        System.Threading.Tasks.Task<BewoningHal> GetBewoningAsync (string adresseerbaarObjectIdentificatie, string expand = default(string), string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Raadpleeg een bewoning door een adresseerbaarobjectIdentificatie op te geven. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats. </param>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of ApiResponse (BewoningHal)</returns>
        System.Threading.Tasks.Task<ApiResponse<BewoningHal>> GetBewoningWithHttpInfoAsync (string adresseerbaarObjectIdentificatie, string expand = default(string), string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Zoek bewoningen door een adresseerbaarObjectIdentificatie of een burgerservicenummer op te geven, samen met een peildatum of periode. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="burgerservicenummer">Uniek persoonsnummer.  (optional)</param>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats.  (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of BewoningHalCollectie</returns>
        System.Threading.Tasks.Task<BewoningHalCollectie> GetBewoningenAsync (string expand = default(string), string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), string burgerservicenummer = default(string), string adresseerbaarObjectIdentificatie = default(string), CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Zoek bewoningen door een adresseerbaarObjectIdentificatie of een burgerservicenummer op te geven, samen met een peildatum of periode. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="burgerservicenummer">Uniek persoonsnummer.  (optional)</param>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats.  (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of ApiResponse (BewoningHalCollectie)</returns>
        System.Threading.Tasks.Task<ApiResponse<BewoningHalCollectie>> GetBewoningenWithHttpInfoAsync (string expand = default(string), string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), string burgerservicenummer = default(string), string adresseerbaarObjectIdentificatie = default(string), CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Raadpleeg het verloop van de bewoning van een adresseerbaar object over een periode door een adresseerbaarobjectIdentificatie en een periode op te geven. Het antwoord bevat het aantal verhuizingen van en naar het object en het gemiddelde aantal bewoners in de opgegeven periode. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats. </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of Verloop</returns>
        System.Threading.Tasks.Task<Verloop> GetBewoningverloopAsync (string adresseerbaarObjectIdentificatie, string fields = default(string), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Raadpleeg het verloop van de bewoning van een adresseerbaar object over een periode door een adresseerbaarobjectIdentificatie en een periode op te geven. Het antwoord bevat het aantal verhuizingen van en naar het object en het gemiddelde aantal bewoners in de opgegeven periode. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats. </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of ApiResponse (Verloop)</returns>
        System.Threading.Tasks.Task<ApiResponse<Verloop>> GetBewoningverloopWithHttpInfoAsync (string adresseerbaarObjectIdentificatie, string fields = default(string), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), CancellationToken cancellationToken = default(CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class BewoningApi : IBewoningApi
    {
        private Org.OpenAPITools.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="BewoningApi"/> class.
        /// </summary>
        /// <returns></returns>
        public BewoningApi(String basePath)
        {
            this.Configuration = new Org.OpenAPITools.Client.Configuration { BasePath = basePath };

            ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="BewoningApi"/> class
        /// </summary>
        /// <returns></returns>
        public BewoningApi()
        {
            this.Configuration = Org.OpenAPITools.Client.Configuration.Default;

            ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="BewoningApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public BewoningApi(Org.OpenAPITools.Client.Configuration configuration = null)
        {
            if (configuration == null) // use the default one in Configuration
                this.Configuration = Org.OpenAPITools.Client.Configuration.Default;
            else
                this.Configuration = configuration;

            ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.ApiClient.RestClient.BaseUrl.ToString();
        }

        /// <summary>
        /// Sets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        [Obsolete("SetBasePath is deprecated, please do 'Configuration.ApiClient = new ApiClient(\"http://new-path\")' instead.")]
        public void SetBasePath(String basePath)
        {
            // do nothing
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Org.OpenAPITools.Client.Configuration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Org.OpenAPITools.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Gets the default header.
        /// </summary>
        /// <returns>Dictionary of HTTP header</returns>
        [Obsolete("DefaultHeader is deprecated, please use Configuration.DefaultHeader instead.")]
        public IDictionary<String, String> DefaultHeader()
        {
            return new ReadOnlyDictionary<string, string>(this.Configuration.DefaultHeader);
        }

        /// <summary>
        /// Add default header.
        /// </summary>
        /// <param name="key">Header field name.</param>
        /// <param name="value">Header field value.</param>
        /// <returns></returns>
        [Obsolete("AddDefaultHeader is deprecated, please use Configuration.AddDefaultHeader instead.")]
        public void AddDefaultHeader(string key, string value)
        {
            this.Configuration.AddDefaultHeader(key, value);
        }

        /// <summary>
        ///  Raadpleeg een bewoning door een adresseerbaarobjectIdentificatie op te geven. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats. </param>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>BewoningHal</returns>
        public BewoningHal GetBewoning (string adresseerbaarObjectIdentificatie, string expand = default(string), string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?))
        {
             ApiResponse<BewoningHal> localVarResponse = GetBewoningWithHttpInfo(adresseerbaarObjectIdentificatie, expand, fields, peildatum, datumVan, datumTotEnMet);
             return localVarResponse.Data;
        }

        /// <summary>
        ///  Raadpleeg een bewoning door een adresseerbaarobjectIdentificatie op te geven. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats. </param>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>ApiResponse of BewoningHal</returns>
        public ApiResponse<BewoningHal> GetBewoningWithHttpInfo (string adresseerbaarObjectIdentificatie, string expand = default(string), string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?))
        {
            // verify the required parameter 'adresseerbaarObjectIdentificatie' is set
            if (adresseerbaarObjectIdentificatie == null)
                throw new ApiException(400, "Missing required parameter 'adresseerbaarObjectIdentificatie' when calling BewoningApi->GetBewoning");

            var localVarPath = "/bewoningen/{adresseerbaarObjectIdentificatie}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (adresseerbaarObjectIdentificatie != null) localVarPathParams.Add("adresseerbaarObjectIdentificatie", this.Configuration.ApiClient.ParameterToString(adresseerbaarObjectIdentificatie)); // path parameter
            if (expand != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "expand", expand)); // query parameter
            if (fields != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "fields", fields)); // query parameter
            if (peildatum != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "peildatum", peildatum)); // query parameter
            if (datumVan != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "datumVan", datumVan)); // query parameter
            if (datumTotEnMet != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "datumTotEnMet", datumTotEnMet)); // query parameter


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetBewoning", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<BewoningHal>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (BewoningHal) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(BewoningHal)));
        }

        /// <summary>
        ///  Raadpleeg een bewoning door een adresseerbaarobjectIdentificatie op te geven. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats. </param>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of BewoningHal</returns>
        public async System.Threading.Tasks.Task<BewoningHal> GetBewoningAsync (string adresseerbaarObjectIdentificatie, string expand = default(string), string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), CancellationToken cancellationToken = default(CancellationToken))
        {
             ApiResponse<BewoningHal> localVarResponse = await GetBewoningWithHttpInfoAsync(adresseerbaarObjectIdentificatie, expand, fields, peildatum, datumVan, datumTotEnMet, cancellationToken);
             return localVarResponse.Data;

        }

        /// <summary>
        ///  Raadpleeg een bewoning door een adresseerbaarobjectIdentificatie op te geven. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats. </param>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of ApiResponse (BewoningHal)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<BewoningHal>> GetBewoningWithHttpInfoAsync (string adresseerbaarObjectIdentificatie, string expand = default(string), string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), CancellationToken cancellationToken = default(CancellationToken))
        {
            // verify the required parameter 'adresseerbaarObjectIdentificatie' is set
            if (adresseerbaarObjectIdentificatie == null)
                throw new ApiException(400, "Missing required parameter 'adresseerbaarObjectIdentificatie' when calling BewoningApi->GetBewoning");

            var localVarPath = "/bewoningen/{adresseerbaarObjectIdentificatie}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (adresseerbaarObjectIdentificatie != null) localVarPathParams.Add("adresseerbaarObjectIdentificatie", this.Configuration.ApiClient.ParameterToString(adresseerbaarObjectIdentificatie)); // path parameter
            if (expand != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "expand", expand)); // query parameter
            if (fields != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "fields", fields)); // query parameter
            if (peildatum != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "peildatum", peildatum)); // query parameter
            if (datumVan != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "datumVan", datumVan)); // query parameter
            if (datumTotEnMet != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "datumTotEnMet", datumTotEnMet)); // query parameter


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType, cancellationToken);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetBewoning", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<BewoningHal>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (BewoningHal) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(BewoningHal)));
        }

        /// <summary>
        ///  Zoek bewoningen door een adresseerbaarObjectIdentificatie of een burgerservicenummer op te geven, samen met een peildatum of periode. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="burgerservicenummer">Uniek persoonsnummer.  (optional)</param>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats.  (optional)</param>
        /// <returns>BewoningHalCollectie</returns>
        public BewoningHalCollectie GetBewoningen (string expand = default(string), string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), string burgerservicenummer = default(string), string adresseerbaarObjectIdentificatie = default(string))
        {
             ApiResponse<BewoningHalCollectie> localVarResponse = GetBewoningenWithHttpInfo(expand, fields, peildatum, datumVan, datumTotEnMet, burgerservicenummer, adresseerbaarObjectIdentificatie);
             return localVarResponse.Data;
        }

        /// <summary>
        ///  Zoek bewoningen door een adresseerbaarObjectIdentificatie of een burgerservicenummer op te geven, samen met een peildatum of periode. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="burgerservicenummer">Uniek persoonsnummer.  (optional)</param>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats.  (optional)</param>
        /// <returns>ApiResponse of BewoningHalCollectie</returns>
        public ApiResponse<BewoningHalCollectie> GetBewoningenWithHttpInfo (string expand = default(string), string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), string burgerservicenummer = default(string), string adresseerbaarObjectIdentificatie = default(string))
        {

            var localVarPath = "/bewoningen";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (expand != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "expand", expand)); // query parameter
            if (fields != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "fields", fields)); // query parameter
            if (peildatum != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "peildatum", peildatum)); // query parameter
            if (datumVan != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "datumVan", datumVan)); // query parameter
            if (datumTotEnMet != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "datumTotEnMet", datumTotEnMet)); // query parameter
            if (burgerservicenummer != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "burgerservicenummer", burgerservicenummer)); // query parameter
            if (adresseerbaarObjectIdentificatie != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "adresseerbaarObjectIdentificatie", adresseerbaarObjectIdentificatie)); // query parameter


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetBewoningen", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<BewoningHalCollectie>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (BewoningHalCollectie) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(BewoningHalCollectie)));
        }

        /// <summary>
        ///  Zoek bewoningen door een adresseerbaarObjectIdentificatie of een burgerservicenummer op te geven, samen met een peildatum of periode. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="burgerservicenummer">Uniek persoonsnummer.  (optional)</param>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats.  (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of BewoningHalCollectie</returns>
        public async System.Threading.Tasks.Task<BewoningHalCollectie> GetBewoningenAsync (string expand = default(string), string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), string burgerservicenummer = default(string), string adresseerbaarObjectIdentificatie = default(string), CancellationToken cancellationToken = default(CancellationToken))
        {
             ApiResponse<BewoningHalCollectie> localVarResponse = await GetBewoningenWithHttpInfoAsync(expand, fields, peildatum, datumVan, datumTotEnMet, burgerservicenummer, adresseerbaarObjectIdentificatie, cancellationToken);
             return localVarResponse.Data;

        }

        /// <summary>
        ///  Zoek bewoningen door een adresseerbaarObjectIdentificatie of een burgerservicenummer op te geven, samen met een peildatum of periode. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="burgerservicenummer">Uniek persoonsnummer.  (optional)</param>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats.  (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of ApiResponse (BewoningHalCollectie)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<BewoningHalCollectie>> GetBewoningenWithHttpInfoAsync (string expand = default(string), string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), string burgerservicenummer = default(string), string adresseerbaarObjectIdentificatie = default(string), CancellationToken cancellationToken = default(CancellationToken))
        {

            var localVarPath = "/bewoningen";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (expand != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "expand", expand)); // query parameter
            if (fields != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "fields", fields)); // query parameter
            if (peildatum != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "peildatum", peildatum)); // query parameter
            if (datumVan != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "datumVan", datumVan)); // query parameter
            if (datumTotEnMet != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "datumTotEnMet", datumTotEnMet)); // query parameter
            if (burgerservicenummer != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "burgerservicenummer", burgerservicenummer)); // query parameter
            if (adresseerbaarObjectIdentificatie != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "adresseerbaarObjectIdentificatie", adresseerbaarObjectIdentificatie)); // query parameter


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType, cancellationToken);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetBewoningen", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<BewoningHalCollectie>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (BewoningHalCollectie) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(BewoningHalCollectie)));
        }

        /// <summary>
        ///  Raadpleeg het verloop van de bewoning van een adresseerbaar object over een periode door een adresseerbaarobjectIdentificatie en een periode op te geven. Het antwoord bevat het aantal verhuizingen van en naar het object en het gemiddelde aantal bewoners in de opgegeven periode. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats. </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>Verloop</returns>
        public Verloop GetBewoningverloop (string adresseerbaarObjectIdentificatie, string fields = default(string), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?))
        {
             ApiResponse<Verloop> localVarResponse = GetBewoningverloopWithHttpInfo(adresseerbaarObjectIdentificatie, fields, datumVan, datumTotEnMet);
             return localVarResponse.Data;
        }

        /// <summary>
        ///  Raadpleeg het verloop van de bewoning van een adresseerbaar object over een periode door een adresseerbaarobjectIdentificatie en een periode op te geven. Het antwoord bevat het aantal verhuizingen van en naar het object en het gemiddelde aantal bewoners in de opgegeven periode. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats. </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>ApiResponse of Verloop</returns>
        public ApiResponse<Verloop> GetBewoningverloopWithHttpInfo (string adresseerbaarObjectIdentificatie, string fields = default(string), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?))
        {
            // verify the required parameter 'adresseerbaarObjectIdentificatie' is set
            if (adresseerbaarObjectIdentificatie == null)
                throw new ApiException(400, "Missing required parameter 'adresseerbaarObjectIdentificatie' when calling BewoningApi->GetBewoningverloop");

            var localVarPath = "/bewoningen/{adresseerbaarObjectIdentificatie}/verloop";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (adresseerbaarObjectIdentificatie != null) localVarPathParams.Add("adresseerbaarObjectIdentificatie", this.Configuration.ApiClient.ParameterToString(adresseerbaarObjectIdentificatie)); // path parameter
            if (fields != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "fields", fields)); // query parameter
            if (datumVan != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "datumVan", datumVan)); // query parameter
            if (datumTotEnMet != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "datumTotEnMet", datumTotEnMet)); // query parameter


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetBewoningverloop", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Verloop>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (Verloop) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(Verloop)));
        }

        /// <summary>
        ///  Raadpleeg het verloop van de bewoning van een adresseerbaar object over een periode door een adresseerbaarobjectIdentificatie en een periode op te geven. Het antwoord bevat het aantal verhuizingen van en naar het object en het gemiddelde aantal bewoners in de opgegeven periode. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats. </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of Verloop</returns>
        public async System.Threading.Tasks.Task<Verloop> GetBewoningverloopAsync (string adresseerbaarObjectIdentificatie, string fields = default(string), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), CancellationToken cancellationToken = default(CancellationToken))
        {
             ApiResponse<Verloop> localVarResponse = await GetBewoningverloopWithHttpInfoAsync(adresseerbaarObjectIdentificatie, fields, datumVan, datumTotEnMet, cancellationToken);
             return localVarResponse.Data;

        }

        /// <summary>
        ///  Raadpleeg het verloop van de bewoning van een adresseerbaar object over een periode door een adresseerbaarobjectIdentificatie en een periode op te geven. Het antwoord bevat het aantal verhuizingen van en naar het object en het gemiddelde aantal bewoners in de opgegeven periode. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adresseerbaarObjectIdentificatie">De unieke identificatie van een verblijfsobject, standplaats of ligplaats. </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of ApiResponse (Verloop)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Verloop>> GetBewoningverloopWithHttpInfoAsync (string adresseerbaarObjectIdentificatie, string fields = default(string), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), CancellationToken cancellationToken = default(CancellationToken))
        {
            // verify the required parameter 'adresseerbaarObjectIdentificatie' is set
            if (adresseerbaarObjectIdentificatie == null)
                throw new ApiException(400, "Missing required parameter 'adresseerbaarObjectIdentificatie' when calling BewoningApi->GetBewoningverloop");

            var localVarPath = "/bewoningen/{adresseerbaarObjectIdentificatie}/verloop";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (adresseerbaarObjectIdentificatie != null) localVarPathParams.Add("adresseerbaarObjectIdentificatie", this.Configuration.ApiClient.ParameterToString(adresseerbaarObjectIdentificatie)); // path parameter
            if (fields != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "fields", fields)); // query parameter
            if (datumVan != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "datumVan", datumVan)); // query parameter
            if (datumTotEnMet != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "datumTotEnMet", datumTotEnMet)); // query parameter


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType, cancellationToken);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetBewoningverloop", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Verloop>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (Verloop) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(Verloop)));
        }

    }
}
